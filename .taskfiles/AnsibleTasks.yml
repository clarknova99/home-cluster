---
version: "3"

env:
  ANSIBLE_CONFIG: "{{.PROJECT_DIR}}/ansible.cfg"

vars:
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory/kube"

tasks:

  init:
    desc: Install / Upgrade Ansible galaxy deps
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - pip3 install --user --requirement requirements.txt
      - ansible-galaxy install -r requirements.yml --roles-path ~/.ansible/roles --force
      - ansible-galaxy collection install -r requirements.yml --collections-path ~/.ansible/collections --force

  list:
    desc: List all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --list-hosts

  prepare:
    desc: Prepare all the k8s nodes for running k3s
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-prepare.yml

  nfs:
    desc: Prepare all the k8s nodes for running k3s
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/vm-mount-storage.yml

  install:
    desc: Install Kubernetes on the nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-installation.yml

  nuke:
    desc: Uninstall Kubernetes on the nodes
    dir: "{{.ANSIBLE_DIR}}"
    interactive: true
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-nuke.yml
      - task: reboot

  ping:
    desc: Ping all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -m 'ping'

  uptime:
    desc: Uptime of all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'uptime'

  rollout-reboot:
    desc: Rollout a reboot across all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-rollout-reboot.yml

  reboot:
    desc: Reboot all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-reboot.yml

  force-reboot:
    desc: Reboot all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-reboot.yml

  poweroff:
    desc: Shutdown all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a '/usr/bin/systemctl poweroff' --become

  vm-start:
    desc: start vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/vm-start.yml

  vm-stop:
    desc: stop vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/vm-stop.yml

  vm-delete:
    desc: delete vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/vm-delete.yml

  vm-clone:
    desc: clone vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/vm-clone.yml

  lxc-create:
    desc: clone vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/lxc-create.yml
  lxc-start:
    desc: clone vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/lxc-start.yml
  lxc-stop:
    desc: clone vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/lxc-stop.yml
  lxc-delete:
    desc: clone vms
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/lxc-delete.yml
  check:
    desc: check hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-check.yml
