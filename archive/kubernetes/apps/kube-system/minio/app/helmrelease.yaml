---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app minio
  namespace: kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2023-02-27T18-10-45Z
      #tag: RELEASE.2022-09-07T22-25-02Z
    env:
      TZ: "${TIMEZONE}"
      MINIO_UPDATE: "off"
      MINIO_BROWSER_REDIRECT_URL: "https://minio.${SECRET_DOMAIN}"
      MINIO_SERVER_URL: "https://s3.${SECRET_DOMAIN}"
      MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
      MINIO_PROMETHEUS_JOB_ID: minio
    # envFrom:
    # ## sops --encrypt --in-place ./kubernetes/apps/kube-system/minio/app/minio.sops.yaml
    # ## sops --decrypt ./kubernetes/apps/kube-system/minio/app/minio.sops.yaml | kubectl apply -f -
    #   - secretRef:
    #       name: *app
    args: ["server", "/data", "--console-address", ":9001"]
    service:
      main:
        enabled: true
        ports:
          http:
            port: &port-console 9001
          api:
            enabled: true
            port: &port-api 9000
        # monitor:
        #   enabled: false
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: api
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.home.arpa/enabled: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/hostname: minio.${SECRET_DOMAIN}
        hosts:
          - host: "minio.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 9001
        tls:
          - hosts:
              - "minio.${SECRET_DOMAIN}"
            secretName: "minio-tls"
      s3:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.home.arpa/enabled: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/hostname: s3.${SECRET_DOMAIN}
        hosts:
          - host: s3.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 9000
        tls:
          - hosts:
              - s3.${SECRET_DOMAIN}
            secretName: "s3-tls"
          # endpoints:
          #   - port: api
          #     scheme: http
          #     path: /minio/v2/metrics/cluster
          #     interval: 1m
          #     scrapeTimeout: 10s
          #     bearerTokenSecret:
          #       name: minio-prometheus
          #       key: token
    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 568
    #   fsGroup: 568
    #   fsGroupChangePolicy: "OnRootMismatch"
    #   supplementalGroups:
    #     - 100
    persistence:
      config:
        enabled: true
        type: nfs
        server: 192.168.1.2
        path: /volume1/network-storage/s3
        readOnly: false
        mountPath: /data
    podAnnotations:
      secret.reloader.stakater.com/reload: minio
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
