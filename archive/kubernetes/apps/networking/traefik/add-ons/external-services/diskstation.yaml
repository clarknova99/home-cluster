---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: diskstation
  namespace: networking
  annotations:
    hajimari.io/enable: "true"
    hajimari.io/icon: simple-icons:proxmox
    #coredns.io/hostname: ds.${SECRET_DOMAIN}
    external-dns.home.arpa/enabled: "true"
    external-dns.alpha.kubernetes.io/target: ${SECRET_DOMAIN}
    external-dns.alpha.kubernetes.io/hostname: ds.${SECRET_DOMAIN}
    #external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    #traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-middleware-chains-authentik@kubernetescrd
    traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-middleware-chains-authelia@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: &host "ds.${SECRET_DOMAIN}"
      http:
        paths:
          - backend:
              service:
                name: diskstation
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - "ds.${SECRET_DOMAIN}"
      secretName: "diskstation-${SECRET_DOMAIN/./-}-tls"
---
apiVersion: v1
kind: Service
metadata:
  name: diskstation
spec:
  ports:
    - name: https
      protocol: TCP
      port: 80
      targetPort: 5001
---
apiVersion: v1
kind: Endpoints
metadata:
  name: diskstation
subsets:
  - addresses:
      - ip: 192.168.1.2
    ports:
      - name: https
        port: 5001
        protocol: TCP
