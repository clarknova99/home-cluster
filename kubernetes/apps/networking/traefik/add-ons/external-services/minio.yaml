---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio
  namespace: networking
  annotations:
    # external-dns.home.arpa/enabled: "true"
    # external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
    # external-dns.alpha.kubernetes.io/hostname: minio.${SECRET_DOMAIN},"s3.${SECRET_DOMAIN}"
    hajimari.io/enable: "true"
    hajimari.io/icon: simple-icons:proxmox
    coredns.io/hostname: "minio.${SECRET_DOMAIN}"
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-middleware-chains-authentik@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: &host "minio.${SECRET_DOMAIN}"
      http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - "minio.${SECRET_DOMAIN}"
      secretName: "minio-${SECRET_DOMAIN/./-}-tls"
---
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  ports:
    - name: https
      protocol: TCP
      port: 80
      targetPort: 9001
---
apiVersion: v1
kind: Endpoints
metadata:
  name: minio
subsets:
  - addresses:
      - ip: 192.168.1.2
    ports:
      - name: https
        port: 9001
        protocol: TCP
