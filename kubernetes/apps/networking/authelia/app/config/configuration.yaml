###############################################################
#                   Authelia configuration                    #
###############################################################

server:
  ## The address to listen on.
  host: 0.0.0.0
  ## The port to listen on.
  port: 9091
log:
  ## Level of verbosity for logs: info, debug, trace.
  level: debug
  format: json
  keep_stdout: true

# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE
# I used this site to generate the secret: https://www.grc.com/passwords.htm
jwt_secret: ${SECRET_AUTHELIA_JWT} # use docker secret file instead AUTHELIA_JWT_SECRET_FILE

# https://docs.authelia.com/configuration/miscellaneous.html#default-redirection-url
default_redirection_url: https://auth.${SECRET_DOMAIN}

totp:
  issuer: authelia.com
  period: 30
  skew: 1

# Enable the following for Duo Push Notification support
# https://www.authelia.com/docs/features/2fa/push-notifications.html
#duo_api:
#  hostname: api-123456789.example.com
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: # use docker secret file instead AUTHELIA_DUO_API_SECRET_KEY_FILE


authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 5m
  file:
    path: /config/users.yaml
    password:
      algorithm: argon2
      argon2:
        variant: argon2id
        iterations: 1
        key_length: 32
        salt_length: 16
        memory: 1024
        parallelism: 8

# authentication_backend:
#   file:
#     path: /config/users.yml
#     # customize passwords based on https://docs.authelia.com/configuration/authentication/file.html
#     password:
#       algorithm: argon2id
#       iterations: 1
#       salt_length: 16
#       parallelism: 8
#       memory: 1024 # blocks this much of the RAM. Tune this.

# https://docs.authelia.com/configuration/access-control.html
access_control:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain: auth.${SECRET_DOMAIN}
      policy: bypass
    - domain: "*.${SECRET_DOMAIN}"
      policy: one_factor
    - domain: "${SECRET_DOMAIN}"
      policy: one_factor

session:
  name: authelia_session
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  # Used a different secret, but the same site as jwt_secret above.
  # secret: SECRET_GOES_HERE # use docker secret file instead AUTHELIA_SESSION_SECRET_FILE
  expiration: 3600 # 1 hour
  inactivity: 300 # 5 minutes
  domain: ${SECRET_DOMAIN} # Should match whatever your root protected domain is

# Optional. Can improve performance on a busy system. If not enabled, session info is stored in memory.
#  redis:
#    host: redis
#    port: 6379
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
    # password: authelia

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
# For local storage, uncomment lines below and comment out mysql. https://docs.authelia.com/configuration/storage/sqlite.html
  encryption_key: C59268DC295F23E63B814570C14D48EC766B54E13223E11D34B5EF960B4C0F94
  local:
    path: /config/db.sqlite3
  # mysql:
  # # MySQL allows running multiple authelia instances. Create database and enter details below.
  #   host: MYSQL_HOST
  #   port: 3306
  #   database: authelia
  #   username: DBUSERNAME
    # Password can also be set using a secret: https://docs.authelia.com/configuration/secrets.html
    # password: use docker secret file instead AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE

notifier:
  # smtp:
  #   username: SMTP_USERNAME
  #   # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
  #   # password: # use docker secret file instead AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
  #   host: SMTP_HOST
  #   port: 587 #465
  #   sender: SENDER_EMAIL
  # For testing purpose, notifications can be sent in a file. Be sure map the volume in docker-compose.
  filesystem:
    filename: /config/notifications.txt
