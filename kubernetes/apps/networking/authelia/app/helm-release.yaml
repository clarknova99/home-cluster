---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authelia
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: authelia
      version: 0.8.57
      sourceRef:
        kind: HelmRepository
        name: authelia
        namespace: flux-system
  values:
    domain: "${SECRET_DOMAIN}"
    pod:
      kind: Deployment
      replicas: 1
      strategy:
        type: Recreate
      extraVolumeMounts:
        - name: config-users
          mountPath: /data
      extraVolumes:
        - name: config-users
          configMap:
            name: authelia-config-users
            items:
              - key: users_database.yml
                path: users_database.yml
      env:
        AUTHELIA_DEFAULT_REDIRECTION_URL: "https://authelia.${SECRET_DOMAIN}"
        AUTHELIA_DUO_API_DISABLE: "true"
        AUTHELIA_LOG_LEVEL: trace
        AUTHELIA_SERVER_PORT: 9091
        AUTHELIA_SESSION_DOMAIN: "${SECRET_DOMAIN}"
        AUTHELIA_THEME: grey
        AUTHELIA_TOTP_ISSUER: authelia.com
        AUTHELIA_WEBAUTHN_DISABLE: "true"
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PATH: /config/users.yaml
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PASSWORD_ALGORITHM: argon2
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PASSWORD_ARGON2_VARIANT: argon2id
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PASSWORD_ARGON2_ITERATIONS: 1
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PASSWORD_ARGON2_KEY_LENGTH: 32
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PASSWORD_ARGON2_SALT_LENGTH: 16
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PASSWORD_ARGON2_MEMORY: 1024
        # AUTHELIA_AUTHENTICATION_BACKEND_FILE_PASSWORD_ARGON2_PARALLELISM: 8
        #AUTHELIA_ACCESS_CONTROL_DEFAULT_POLICY: deny
        #AUTHELIA_ACCESS_CONTROL_RULES_DOMAIN
      resources:
        requests:
          memory: 200Mi
          cpu: 150m
    configMap:
      enabled: true
      log:
        level: debug
      authentication_backend:
        # disable_reset_password: true
        ldap:
          enabled: false
        # file:
        #   enabled: true
        #   path: /config/users_database.yml
        #   password:
        #     algorithm: argon2id
        file:
          enabled: true
          path: /data/users_database.yml
          password:
            algorithm: argon2id
            # iterations: 50000
            # salt_length: 16
      access_control:
        default_policy: deny
        rules:
          - domain: "*.${SECRET_DOMAIN}"
            policy: one_factor
            subject:
              - "group:admins"
      session:
        expiration: 24h
        inactivity: 24h
        remember_me_duration: 1M
        redis:
          enabled: false
      storage:
        local:
          enabled: true
          path: /config/db.sqlite3
        mysql:
          enabled: false
        postgres:
          enabled: false
      notifier:
        disable_startup_check: true
        filesystem:
          enabled: true
          filename: /config/notification.txt
        smtp:
          enabled: false
    secret:
      existingSecret: authelia-secrets

    persistence:
      enabled: true
      existingClaim: pvc-authelia
      # data:
      #   enabled: true
      #   existingClaim: pvc-authelia-nfs
      #   mountPath: /data
    # persistence:
    #   config:
    #     enabled: true
    #     type: configMap
    #     name: authelia-configmap
    #     subPath: configuration.yaml
    #     mountPath: /config/configuration.yml
    #     readOnly: false


# ---
# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: authelia
#   namespace: networking
# spec:
#   interval: 15m
#   chart:
#     spec:
#       chart: authelia
#       reconcileStrategy: ChartVersion
#       sourceRef:
#         kind: HelmRepository
#         name: authelia
#         namespace: flux-system
#       interval: 15m
#   install:
#     createNamespace: true
#     remediation:
#       retries: 5
#   upgrade:
#     remediation:
#       retries: 5

#   values:
#     # global:
#     #   nameOverride: authelia
#     controller:
#       replicas: 1
#       strategy: RollingUpdate
#       rollingUpdate:
#         surge: 1
#     podAnnotations:
#       configmap.reloader.stakater.com/reload: authelia
#       secret.reloader.stakater.com/reload: authelia
#     image:
#       registry: ghcr.io
#       repository: authelia/authelia
#       tag: '4.37.5'
#     # env:
#     #   X_AUTHELIA_CONFIG: /data/authelia/config/configuration.yaml
#     configMap:
#       # Enable the configMap source for the Authelia config.
#       # If this is false you need to provide a volumeMount via PV/PVC or other means that mounts to /config.
#       enabled: true
#       secret:
#         jwt:
#         key: ${SECRET_AUTHELIA_JWT}
#       default_redirection_url: https://auth.${SECRET_DOMAIN}
#       totp:
#         issuer: authelia.com
#         period: 30
#         skew: 1
#       authentication_backend:
#         password_reset:
#           disable: true
#         refresh_interval: 5m
#         file:
#           path: /config/users.yaml
#           password:
#             algorithm: argon2
#             argon2:
#               variant: argon2id
#               iterations: 1
#               key_length: 32
#               salt_length: 16
#               memory: 1024
#               parallelism: 8
#       # https://docs.authelia.com/configuration/access-control.html
#       access_control:
#         default_policy: deny
#         rules:
#           # Rules applied to everyone
#           - domain: auth.${SECRET_DOMAIN}
#             policy: bypass
#           - domain: "*.${SECRET_DOMAIN}"
#             policy: one_factor
#           - domain: "${SECRET_DOMAIN}"
#             policy: one_factor
#       session:
#         name: authelia_session
#         # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
#         # Used a different secret, but the same site as jwt_secret above.
#         # secret: SECRET_GOES_HERE # use docker secret file instead AUTHELIA_SESSION_SECRET_FILE
#         expiration: 3600 # 1 hour
#         inactivity: 300 # 5 minutes
#         domain: ${SECRET_DOMAIN} # Should match whatever your root protected domain is
#       regulation:
#         max_retries: 3
#         find_time: 120
#         ban_time: 300
#       storage:
#       # For local storage, uncomment lines below and comment out mysql. https://docs.authelia.com/configuration/storage/sqlite.html
#         encryption_key: C59268DC295F23E63B814570C14D48EC766B54E13223E11D34B5EF960B4C0F94
#         local:
#           path: /config/db.sqlite3
#       notifier:
#         smtp:
#           enabled: false
#         # smtp:
#         #   username: SMTP_USERNAME
#         #   # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
#         #   # password: # use docker secret file instead AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
#         #   host: SMTP_HOST
#         #   port: 587 #465
#         #   sender: SENDER_EMAIL
#         # For testing purpose, notifications can be sent in a file. Be sure map the volume in docker-compose.
#         # filesystem:
#         #   filename: /config/notifications.txt
#     service:
#       main:
#         ports:
#           http:
#             port: 9091
#     resources:
#       requests:
#         cpu: 5m
#         memory: 10Mi
#       limits:
#         memory: 100Mi
#     topologySpreadConstraints:
#       - maxSkew: 1
#         topologyKey: kubernetes.io/hostname
#         whenUnsatisfiable: DoNotSchedule
#         labelSelector:
#           matchLabels:
#             app.kubernetes.io/name: authelia
