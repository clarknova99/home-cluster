---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      n8n:
        # initContainers:
        #   init-dir:
        #     image:
        #       repository: busybox
        #       tag: latest
        #       pullPolicy: IfNotPresent
        #     command: ['sh', '-c', 'chown -R 1000:1000 /home/node/.n8n']
        containers:
          app:
            image:
              repository: docker.io/n8nio/n8n
              tag: 1.41.0
            env:
              GENERIC_TIMEZONE: ${TIMEZONE}
              N8N_PORT: &port 80
              N8N_HOST: &host "n8n.${SECRET_DOMAIN}"
              WEBHOOK_URL: "https://n8n.${SECRET_DOMAIN}"
              N8N_ENCRYPTION_KEY: ${SECRET_N8N_ENCRYPTION_KEY}
              N8N_LOG_LEVEL: verbose
              N8N_LOG_OUTPUT: console, file
              N8N_PERSONALIZATION_ENABLED: false
              N8N_VERSION_NOTIFICATIONS_ENABLED: true
              N8N_DIAGONISTICS_ENABLED: true
              N8N_HIRING_BANNER_ENABLED: false
              N8N_USER_MANAGEMENT_DISABLED: true
              N8N_TEMPLATES_ENABLED: false
              N8N_METRICS: true
              N8N_USER_FOLDER: /home/node/.n8n
              NODE_FUNCTION_ALLOW_EXTERNAL: databricks/sql
              DB_TYPE: postgresdb
              DB_POSTGRESDB_DATABASE: n8n
              DB_POSTGRESDB_HOST: cloudnative-pg-cluster.database.svc.cluster.local
              DB_POSTGRESDB_USER: ${SECRET_POSTGRES_USERNAME}
              DB_POSTGRESDB_PASSWORD: ${SECRET_POSTGRES_PASSWORD}
              DB_POSTGRESDB_PORT: 5432
        pod:
          nodeSelector:
            kubernetes.io/arch: amd64
          securityContext:
            runAsUser: 0
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
    service:
      app:
        controller: n8n
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:water-flow
        className: internal
        hosts:
          - host: n8n.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: 80
        tls:
          - hosts:
              - n8n.${SECRET_DOMAIN}
    persistence:
      config:
        enabled: true
        type: nfs
        server: 192.168.1.2
        path: /volume1/network-storage/n8n/app
        globalMounts:
          - path: /home/node/.n8n
      files:
        enabled: true
        type: nfs
        server: 192.168.1.2
        path: /volume1/network-storage/n8n/files
        globalMounts:
          - path: /files
    # persistence:
    #   config:
    #     enabled: true
    #     existingClaim: pvc-n8n
    #     mountPath: /home/node/.n8n

    resources:
      requests:
        cpu: 20m
        memory: 128M
      limits:
        memory: 512M
