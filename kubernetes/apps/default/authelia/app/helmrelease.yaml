---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: lldap
      namespace: default
    - name: redis
      namespace: database
  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 15.5
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: authelia-secrets
        containers:
          main:
            image:
              repository: ghcr.io/authelia/authelia
              #master@sha256:a3647c3dd136402745c7639e446944004145630c822f27e22f999c414c234d2f
              tag: master@sha256:01686b89b93b1a27c26cf4cffc6f9a7978a2280a5d43e0559dd6cc9889e44547
            env:
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN: ou=groups
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: ou=people
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN: dc=home,dc=arpa
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_DISPLAY_NAME_ATTRIBUTE: displayName
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: (member={dn})
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUP_NAME_ATTRIBUTE: cn
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION: custom
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_MAIL_ATTRIBUTE: mail
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_START_TLS: "false"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TIMEOUT: 5s
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_URL: ldap://lldap.default.svc.cluster.local:389
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER: uid=admin,ou=people,dc=home,dc=arpa
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTE: uid
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: (&({username_attribute}={input})(objectClass=person))
              AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE: "false"
              AUTHELIA_AUTHENTICATION_BACKEND_REFRESH_INTERVAL: 1m
              AUTHELIA_DEFAULT_REDIRECTION_URL: https://auth.${SECRET_DOMAIN}
              AUTHELIA_DUO_API_DISABLE: "true"
              AUTHELIA_LOG_LEVEL: debug
              AUTHELIA_NOTIFIER_DISABLE_STARTUP_CHECK: "true"
              # AUTHELIA_NOTIFIER_SMTP_DISABLE_REQUIRE_TLS: "true"
              AUTHELIA_NOTIFIER_SMTP_HOST: ${SECRET_MAIL_HOST}
              AUTHELIA_NOTIFIER_SMTP_PORT: ${SECRET_MAIL_PORT}
              AUTHELIA_NOTIFIER_SMTP_SENDER: ${SECRET_DOMAIN} auth <auth@${SECRET_DOMAIN}>
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
              AUTHELIA_SERVER_PORT: &port 80
              AUTHELIA_SESSION_DOMAIN: ${SECRET_DOMAIN}
              AUTHELIA_SESSION_NAME: authelia-home-cluster
              AUTHELIA_SESSION_REDIS_DATABASE_INDEX: 14
              AUTHELIA_SESSION_REDIS_HOST: redis-master.database.svc.cluster.local
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
              AUTHELIA_THEME: dark
              AUTHELIA_TOTP_ISSUER: authelia.com
              AUTHELIA_WEBAUTHN_DISABLE: "true"
            envFrom: *envFrom
            args: ["--config", "/config/configuration.yaml", "--config.experimental.filters", "expand-env"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                memory: 128Mi
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            port: 8080
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          hajimari.io/icon: mdi:shield-account
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: &host auth.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia-configmap
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true
