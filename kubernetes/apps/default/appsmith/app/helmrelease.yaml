---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: appsmith
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: appsmith
      version: 2.0.6
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  values:
    # SPDX-License-Identifier: APACHE-2.0

    ## @section Global parameters
    ## Global Docker image parameters
    ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
    ## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
    ##

    ## @param global.imageRegistry Global Docker image registry
    ## @param global.imagePullSecrets Global Docker registry secret names as an array
    ## @param global.storageClass Global StorageClass for Persistent Volume(s)
    ##
    global:
      imageRegistry: ""
      ## E.g.
      ## imagePullSecrets:
      ##   - myRegistryKeySecretName
      ##
      imagePullSecrets: []
      storageClass: ""

    ## @section Common parameters
    ##

    ## @param kubeVersion Override Kubernetes version
    ##
    kubeVersion: ""
    ## @param nameOverride String to partially override common.names.name
    ##
    nameOverride: ""
    ## @param fullnameOverride String to fully override common.names.fullname
    ##
    fullnameOverride: ""
    ## @param namespaceOverride String to fully override common.names.namespace
    ##
    namespaceOverride: ""
    ## @param commonLabels Labels to add to all deployed objects
    ##
    commonLabels: {}
    ## @param commonAnnotations Annotations to add to all deployed objects
    ##
    commonAnnotations: {}
    ## @param clusterDomain Kubernetes cluster domain name
    ##
    clusterDomain: cluster.local
    ## @param extraDeploy Array of extra objects to deploy with the release
    ##
    extraDeploy: []

    ## Enable diagnostic mode in the deployment
    ##
    diagnosticMode:
      ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
      ##
      enabled: false
      ## @param diagnosticMode.command Command to override all containers in the deployment
      ##
      command:
        - sleep
      ## @param diagnosticMode.args Args to override all containers in the deployment
      ##
      args:
        - infinity

    ## Bitnami Appsmith image
    ## ref: https://hub.docker.com/r/bitnami/appsmith/tags/
    ## @param image.registry Appsmith image registry
    ## @param image.repository Appsmith image repository
    ## @param image.tag Appsmith image tag (immutable tags are recommended)
    ## @param image.digest Appsmith image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
    ## @param image.pullPolicy Appsmith image pull policy
    ## @param image.pullSecrets Appsmith image pull secrets
    ## @param image.debug Enable Appsmith image debug mode
    ##
    image:
      registry: docker.io
      repository: bitnami/appsmith
      tag: 1.9.37-debian-11-r10
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
      ## Enable debug mode
      ##
      debug: true

    ## @section Appsmith Client Parameters
    ##
    ##
    client:
      ## @param client.replicaCount Number of Appsmith client replicas to deploy
      ##
      replicaCount: 1
      ## @param client.containerPorts.http Appsmith client HTTP container port
      ##
      containerPorts:
        http: 8080
      ## Configure extra options for Appsmith client containers' liveness and readiness probes
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
      ## @param client.livenessProbe.enabled Enable livenessProbe on Appsmith client containers
      ## @param client.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
      ## @param client.livenessProbe.periodSeconds Period seconds for livenessProbe
      ## @param client.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
      ## @param client.livenessProbe.failureThreshold Failure threshold for livenessProbe
      ## @param client.livenessProbe.successThreshold Success threshold for livenessProbe
      ##
      livenessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param client.readinessProbe.enabled Enable readinessProbe on Appsmith client containers
      ## @param client.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
      ## @param client.readinessProbe.periodSeconds Period seconds for readinessProbe
      ## @param client.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
      ## @param client.readinessProbe.failureThreshold Failure threshold for readinessProbe
      ## @param client.readinessProbe.successThreshold Success threshold for readinessProbe
      ##
      readinessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param client.startupProbe.enabled Enable startupProbe on Appsmith client containers
      ## @param client.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
      ## @param client.startupProbe.periodSeconds Period seconds for startupProbe
      ## @param client.startupProbe.timeoutSeconds Timeout seconds for startupProbe
      ## @param client.startupProbe.failureThreshold Failure threshold for startupProbe
      ## @param client.startupProbe.successThreshold Success threshold for startupProbe
      ##
      startupProbe:
        enabled: false
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param client.customLivenessProbe Custom livenessProbe that overrides the default one
      ##
      customLivenessProbe: {}
      ## @param client.customReadinessProbe Custom readinessProbe that overrides the default one
      ##
      customReadinessProbe: {}
      ## @param client.customStartupProbe Custom startupProbe that overrides the default one
      ##
      customStartupProbe: {}
      ## Appsmith client resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ## @param client.resources.limits The resources limits for the Appsmith client containers
      ## @param client.resources.requests The requested resources for the Appsmith client containers
      ##
      resources:
        limits: {}
        requests: {}
      ## Configure Pods Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      ## @param client.podSecurityContext.enabled Enabled Appsmith client pods' Security Context
      ## @param client.podSecurityContext.fsGroup Set Appsmith client pod's Security Context fsGroup
      ##
      podSecurityContext:
        enabled: true
        fsGroup: 1001
      ## Configure Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param client.containerSecurityContext.enabled Enabled Appsmith client containers' Security Context
      ## @param client.containerSecurityContext.runAsUser Set Appsmith client containers' Security Context runAsUser
      ## @param client.containerSecurityContext.runAsNonRoot Set Appsmith client containers' Security Context runAsNonRoot
      ## @param client.containerSecurityContext.readOnlyRootFilesystem Set Appsmith client containers' Security Context runAsNonRoot
      ##
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: false

      ## @param client.command Override default container command (useful when using custom images)
      ##
      command: []
      ## @param client.args Override default container args (useful when using custom images)
      ##
      args: []
      ## @param client.hostAliases Appsmith client pods host aliases
      ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
      ##
      hostAliases: []
      ## @param client.podLabels Extra labels for Appsmith client pods
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      podLabels: {}
      ## @param client.podAnnotations Annotations for Appsmith client pods
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      podAnnotations: {}
      ## @param client.podAffinityPreset Pod affinity preset. Ignored if `client.affinity` is set. Allowed values: `soft` or `hard`
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
      ##
      podAffinityPreset: ""
      ## @param client.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `client.affinity` is set. Allowed values: `soft` or `hard`
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
      ##
      podAntiAffinityPreset: soft
      ## Node client.affinity preset
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
      ##
      nodeAffinityPreset:
        ## @param client.nodeAffinityPreset.type Node affinity preset type. Ignored if `client.affinity` is set. Allowed values: `soft` or `hard`
        ##
        type: ""
        ## @param client.nodeAffinityPreset.key Node label key to match. Ignored if `client.affinity` is set
        ##
        key: ""
        ## @param client.nodeAffinityPreset.values Node label values to match. Ignored if `client.affinity` is set
        ## E.g.
        ## values:
        ##   - e2e-az1
        ##   - e2e-az2
        ##
        values: []
      ## @param client.affinity Affinity for Appsmith client pods assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      ## NOTE: `client.podAffinityPreset`, `client.podAntiAffinityPreset`, and `client.nodeAffinityPreset` will be ignored when it's set
      ##
      affinity: {}
      ## @param client.nodeSelector Node labels for Appsmith client pods assignment
      ## ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
      nodeSelector: {}
      ## @param client.tolerations Tolerations for Appsmith client pods assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      ##
      tolerations: []
      ## @param client.updateStrategy.type Appsmith client statefulset strategy type
      ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
      ##
      updateStrategy:
        ## StrategyType
        ## Can be set to RollingUpdate or OnDelete
        ##
        type: RollingUpdate

      ## @param client.priorityClassName Appsmith client pods' priorityClassName
      ##
      priorityClassName: ""
      ## @param client.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
      ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
      ##
      topologySpreadConstraints: []
      ## @param client.schedulerName Name of the k8s scheduler (other than default) for Appsmith client pods
      ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
      ##
      schedulerName: ""
      ## @param client.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
      ##
      terminationGracePeriodSeconds: ""
      ## @param client.lifecycleHooks for the Appsmith client container(s) to automate configuration before or after startup
      ##
      lifecycleHooks: {}
      ## @param client.extraEnvVars Array with extra environment variables to add to Appsmith client nodes
      ## e.g:
      ## extraEnvVars:
      ##   - name: FOO
      ##     value: "bar"
      ##
      extraEnvVars: []
      ## @param client.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Appsmith client nodes
      ##
      extraEnvVarsCM: ""
      ## @param client.extraEnvVarsSecret Name of existing Secret containing extra env vars for Appsmith client nodes
      ##
      extraEnvVarsSecret: ""
      ## @param client.extraVolumes Optionally specify extra list of additional volumes for the Appsmith client pod(s)
      ##
      extraVolumes: []
      ## @param client.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Appsmith client container(s)
      ##
      extraVolumeMounts: []
      ## @param client.sidecars Add additional sidecar containers to the Appsmith client pod(s)
      ## e.g:
      ## sidecars:
      ##   - name: your-image-name
      ##     image: your-image
      ##     imagePullPolicy: Always
      ##     ports:
      ##       - name: portname
      ##         containerPort: 1234
      ##
      sidecars: []
      ## @param client.initContainers Add additional init containers to the Appsmith client pod(s)
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
      ## e.g:
      ## initContainers:
      ##  - name: your-image-name
      ##    image: your-image
      ##    imagePullPolicy: Always
      ##    command: ['sh', '-c', 'echo "hello world"']
      ##
      initContainers: []

      ## @section Appsmith Client Traffic Exposure Parameters
      ##
      service:
        ## @param client.service.type Appsmith client service type
        ##
        type: LoadBalancer
        ## @param client.service.ports.http Appsmith client service HTTP port
        ##
        ports:
          http: 80
        ## Node ports to expose
        ## @param client.service.nodePorts.http Node port for HTTP
        ## NOTE: choose port between <30000-32767>
        ##
        nodePorts:
          http: ""
        ## @param client.service.clusterIP Appsmith client service Cluster IP
        ## e.g.:
        ## clusterIP: None
        ##
        clusterIP: ""
        ## @param client.service.loadBalancerIP Appsmith client service Load Balancer IP
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
        ##
        loadBalancerIP: ""
        ## @param client.service.loadBalancerSourceRanges Appsmith client service Load Balancer sources
        ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
        ## e.g:
        ## loadBalancerSourceRanges:
        ##   - 10.10.10.0/24
        ##
        loadBalancerSourceRanges: []
        ## @param client.service.externalTrafficPolicy Appsmith client service external traffic policy
        ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
        ##
        externalTrafficPolicy: Cluster
        ## @param client.service.annotations Additional custom annotations for Appsmith client service
        ##
        annotations: {}
        ## @param client.service.extraPorts Extra ports to expose in Appsmith client service (normally used with the `sidecars` value)
        ##
        extraPorts: []
        ## @param client.service.sessionAffinity Control where client requests go, to the same pod or round-robin
        ## Values: ClientIP or None
        ## ref: https://kubernetes.io/docs/user-guide/services/
        ##
        sessionAffinity: None
        ## @param client.service.sessionAffinityConfig Additional settings for the sessionAffinity
        ## sessionAffinityConfig:
        ##   clientIP:
        ##     timeoutSeconds: 300
        ##
        sessionAffinityConfig: {}

      ## ref: http://kubernetes.io/docs/user-guide/ingress/
      ##
      ingress:
        ## @param client.ingress.enabled Enable ingress record generation for Appsmith
        ##
        enabled: true
        annotations:
          hajimari.io/enable: "true"
        ingressClassName: internal
        hosts:
          - host: "appsmith.${SECRET_DOMAIN}"

        tls:
          - hosts:
              - "appsmith.${SECRET_DOMAIN}"
        path: /
        pathType: Prefix
        ## @param client.ingress.pathType Ingress path type

        ##
        #pathType: ImplementationSpecific
        ## @param client.ingress.apiVersion Force Ingress API version (automatically detected if not set)
        ##
        #apiVersion: ""
        ## @param client.ingress.hostname Default host for the ingress record
        ##
        #hostname: appsmith.local
        ## @param client.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
        ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
        ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
        ##
        #ingressClassName: ""
        ## @param client.ingress.path Default path for the ingress record
        ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
        ##
        #path: /
        ## @param client.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
        ## Use this parameter to set the required annotations for cert-manager, see
        ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
        ## e.g:
        ## annotations:
        ##   kubernetes.io/ingress.class: nginx
        ##   cert-manager.io/cluster-issuer: cluster-issuer-name
        ##
        #annotations: {}
        ## @param client.ingress.tls Enable TLS configuration for the host defined at `client.ingress.hostname` parameter
        ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
        ## You can:
        ##   - Use the `client.ingress.secrets` parameter to create this TLS secret
        ##   - Rely on cert-manager to create it by setting the corresponding annotations
        ##   - Rely on Helm to create self-signed certificates by setting `client.ingress.selfSigned=true`
        ##
        #tls: false
        ## @param client.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
        ##
        #selfSigned: false
        ## @param client.ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
        ## e.g:
        ## extraHosts:
        ##   - name: appsmith.local
        ##     path: /
        ##
        #extraHosts: []
        ## @param client.ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
        ## e.g:
        ## extraPaths:
        ## - path: /*
        ##   backend:
        ##     serviceName: ssl-redirect
        ##     servicePort: use-annotation
        ##
        #extraPaths: []
        ## @param client.ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
        ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
        ## e.g:
        ## extraTls:
        ## - hosts:
        ##     - appsmith.local
        ##   secretName: appsmith.local-tls
        ##
        #extraTls: []
        ## @param client.ingress.secrets Custom TLS certificates as secrets
        ## NOTE: 'key' and 'certificate' are expected in PEM format
        ## NOTE: 'name' should line up with a 'secretName' set further up
        ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
        ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
        ## It is also possible to create and manage the certificates outside of this helm chart
        ## Please see README.md for more information
        ## e.g:
        ## secrets:
        ##   - name: appsmith.local-tls
        ##     key: |-
        ##       -----BEGIN RSA PRIVATE KEY-----
        ##       ...
        ##       -----END RSA PRIVATE KEY-----
        ##     certificate: |-
        ##       -----BEGIN CERTIFICATE-----
        ##       ...
        ##       -----END CERTIFICATE-----
        ##
        #secrets: []
        ## @param client.ingress.extraRules Additional rules to be covered with this ingress record
        ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
        ## e.g:
        ## extraRules:
        ## - host: example.local
        ##     http:
        ##       path: /
        ##       backend:
        ##         service:
        ##           name: example-svc
        ##           port:
        ##             name: http
        ##
        #extraRules: []

    ## @section Appsmith Backend Parameters
    ##
    ##
    backend:
      ## @param backend.replicaCount Number of Appsmith backend replicas to deploy
      ##
      replicaCount: 1

      ## @param backend.adminUser Appsmith admin user
      ##
      adminUser: user
      ## @param backend.adminEmail Appsmith admin email
      ##
      adminEmail: user@example.com
      ## @param backend.adminPassword Appsmith admin password
      ##
      adminPassword: ""
      ## @param backend.encryptionSalt Appsmith database encryption salt
      ##
      encryptionSalt: ""
      ## @param backend.encryptionPassword Appsmith database encryption password
      ##
      encryptionPassword: ""

      ## @param backend.existingSecret Name of a secret containing the admin password, encryption salt and encryption password
      ##
      existingSecret: ""
      ## @param backend.existingSecretPasswordKey Key inside the existing secret containing the admin password
      ##
      existingSecretPasswordKey: "admin-password"
      ## @param backend.existingSecretEncryptionSaltKey Key inside the existing secret containing the encryption salt
      ##
      existingSecretEncryptionSaltKey: "encryption-salt"
      ## @param backend.existingSecretEncryptionPasswordKey Key inside the existing secret containing the encryption password
      ##
      existingSecretEncryptionPasswordKey: "encryption-password"

      ## @param backend.containerPorts.http Appsmith backend HTTP container port
      ##
      containerPorts:
        http: 8080
      ## Configure extra options for Appsmith backend containers' liveness and readiness probes
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
      ## @param backend.livenessProbe.enabled Enable livenessProbe on Appsmith backend containers
      ## @param backend.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
      ## @param backend.livenessProbe.periodSeconds Period seconds for livenessProbe
      ## @param backend.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
      ## @param backend.livenessProbe.failureThreshold Failure threshold for livenessProbe
      ## @param backend.livenessProbe.successThreshold Success threshold for livenessProbe
      ##
      livenessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param backend.readinessProbe.enabled Enable readinessProbe on Appsmith backend containers
      ## @param backend.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
      ## @param backend.readinessProbe.periodSeconds Period seconds for readinessProbe
      ## @param backend.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
      ## @param backend.readinessProbe.failureThreshold Failure threshold for readinessProbe
      ## @param backend.readinessProbe.successThreshold Success threshold for readinessProbe
      ##
      readinessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param backend.startupProbe.enabled Enable startupProbe on Appsmith backend containers
      ## @param backend.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
      ## @param backend.startupProbe.periodSeconds Period seconds for startupProbe
      ## @param backend.startupProbe.timeoutSeconds Timeout seconds for startupProbe
      ## @param backend.startupProbe.failureThreshold Failure threshold for startupProbe
      ## @param backend.startupProbe.successThreshold Success threshold for startupProbe
      ##
      startupProbe:
        enabled: false
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param backend.customLivenessProbe Custom livenessProbe that overrides the default one
      ##
      customLivenessProbe: {}
      ## @param backend.customReadinessProbe Custom readinessProbe that overrides the default one
      ##
      customReadinessProbe: {}
      ## @param backend.customStartupProbe Custom startupProbe that overrides the default one
      ##
      customStartupProbe: {}
      ## Appsmith backend resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ## @param backend.resources.limits The resources limits for the Appsmith backend containers
      ## @param backend.resources.requests The requested resources for the Appsmith backend containers
      ##
      resources:
        limits: {}
        requests: {}
      ## Configure Pods Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      ## @param backend.podSecurityContext.enabled Enabled Appsmith backend pods' Security Context
      ## @param backend.podSecurityContext.fsGroup Set Appsmith backend pod's Security Context fsGroup
      ##
      podSecurityContext:
        enabled: true
        fsGroup: 1001
      ## Configure Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param backend.containerSecurityContext.enabled Enabled Appsmith backend containers' Security Context
      ## @param backend.containerSecurityContext.runAsUser Set Appsmith backend containers' Security Context runAsUser
      ## @param backend.containerSecurityContext.runAsNonRoot Set Appsmith backend containers' Security Context runAsNonRoot
      ## @param backend.containerSecurityContext.readOnlyRootFilesystem Set Appsmith backend containers' Security Context runAsNonRoot
      ##
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: false

      ## @param backend.command Override default container command (useful when using custom images)
      ##
      command: []
      ## @param backend.args Override default container args (useful when using custom images)
      ##
      args: []
      ## @param backend.hostAliases Appsmith backend pods host aliases
      ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
      ##
      hostAliases: []
      ## @param backend.podLabels Extra labels for Appsmith backend pods
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      podLabels: {}
      ## @param backend.podAnnotations Annotations for Appsmith backend pods
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      podAnnotations: {}
      ## @param backend.podAffinityPreset Pod affinity preset. Ignored if `backend.affinity` is set. Allowed values: `soft` or `hard`
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
      ##
      podAffinityPreset: ""
      ## @param backend.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `backend.affinity` is set. Allowed values: `soft` or `hard`
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
      ##
      podAntiAffinityPreset: soft
      ## Node backend.affinity preset
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
      ##
      nodeAffinityPreset:
        ## @param backend.nodeAffinityPreset.type Node affinity preset type. Ignored if `backend.affinity` is set. Allowed values: `soft` or `hard`
        ##
        type: ""
        ## @param backend.nodeAffinityPreset.key Node label key to match. Ignored if `backend.affinity` is set
        ##
        key: ""
        ## @param backend.nodeAffinityPreset.values Node label values to match. Ignored if `backend.affinity` is set
        ## E.g.
        ## values:
        ##   - e2e-az1
        ##   - e2e-az2
        ##
        values: []
      ## @param backend.affinity Affinity for Appsmith backend pods assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      ## NOTE: `backend.podAffinityPreset`, `backend.podAntiAffinityPreset`, and `backend.nodeAffinityPreset` will be ignored when it's set
      ##
      affinity: {}
      ## @param backend.nodeSelector Node labels for Appsmith backend pods assignment
      ## ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
      nodeSelector: {}
      ## @param backend.tolerations Tolerations for Appsmith backend pods assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      ##
      tolerations: []
      ## @param backend.updateStrategy.type Appsmith backend statefulset strategy type
      ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
      ##
      updateStrategy:
        ## StrategyType
        ## Can be set to RollingUpdate or OnDelete
        ##
        type: RollingUpdate

      ## @param backend.priorityClassName Appsmith backend pods' priorityClassName
      ##
      priorityClassName: ""
      ## @param backend.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
      ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
      ##
      topologySpreadConstraints: []
      ## @param backend.schedulerName Name of the k8s scheduler (other than default) for Appsmith backend pods
      ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
      ##
      schedulerName: ""
      ## @param backend.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
      ##
      terminationGracePeriodSeconds: ""
      ## @param backend.lifecycleHooks for the Appsmith backend container(s) to automate configuration before or after startup
      ##
      lifecycleHooks: {}
      ## @param backend.extraEnvVars Array with extra environment variables to add to Appsmith backend nodes
      ## e.g:
      ## extraEnvVars:
      ##   - name: FOO
      ##     value: "bar"
      ##
      extraEnvVars: []
      ## @param backend.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Appsmith backend nodes
      ##
      extraEnvVarsCM: ""
      ## @param backend.extraEnvVarsSecret Name of existing Secret containing extra env vars for Appsmith backend nodes
      ##
      extraEnvVarsSecret: ""
      ## @param backend.extraVolumes Optionally specify extra list of additional volumes for the Appsmith backend pod(s)
      ##
      extraVolumes: []
      ## @param backend.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Appsmith backend container(s)
      ##
      extraVolumeMounts: []
      ## @param backend.sidecars Add additional sidecar containers to the Appsmith backend pod(s)
      ## e.g:
      ## sidecars:
      ##   - name: your-image-name
      ##     image: your-image
      ##     imagePullPolicy: Always
      ##     ports:
      ##       - name: portname
      ##         containerPort: 1234
      ##
      sidecars: []
      ## @param backend.initContainers Add additional init containers to the Appsmith backend pod(s)
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
      ## e.g:
      ## initContainers:
      ##  - name: your-image-name
      ##    image: your-image
      ##    imagePullPolicy: Always
      ##    command: ['sh', '-c', 'echo "hello world"']
      ##
      initContainers: []

      ## @section Appsmith Backend Traffic Exposure Parameters
      ##
      service:
        ## @param backend.service.type Appsmith backend service type
        ##
        type: ClusterIP
        ## @param backend.service.ports.http Appsmith backend service HTTP port
        ##
        ports:
          http: 80
        ## Node ports to expose
        ## @param backend.service.nodePorts.http Node port for HTTP
        ## NOTE: choose port between <30000-32767>
        ##
        nodePorts:
          http: ""
        ## @param backend.service.clusterIP Appsmith backend service Cluster IP
        ## e.g.:
        ## clusterIP: None
        ##
        clusterIP: ""
        ## @param backend.service.loadBalancerIP Appsmith backend service Load Balancer IP
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
        ##
        loadBalancerIP: ""
        ## @param backend.service.loadBalancerSourceRanges Appsmith backend service Load Balancer sources
        ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
        ## e.g:
        ## loadBalancerSourceRanges:
        ##   - 10.10.10.0/24
        ##
        loadBalancerSourceRanges: []
        ## @param backend.service.externalTrafficPolicy Appsmith backend service external traffic policy
        ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-backend-source-ip
        ##
        externalTrafficPolicy: Cluster
        ## @param backend.service.annotations Additional custom annotations for Appsmith backend service
        ##
        annotations: {}
        ## @param backend.service.extraPorts Extra ports to expose in Appsmith backend service (normally used with the `sidecars` value)
        ##
        extraPorts: []
        ## @param backend.service.sessionAffinity Control where backend requests go, to the same pod or round-robin
        ## Values: BackendIP or None
        ## ref: https://kubernetes.io/docs/user-guide/services/
        ##
        sessionAffinity: None
        ## @param backend.service.sessionAffinityConfig Additional settings for the sessionAffinity
        ## sessionAffinityConfig:
        ##   backendIP:
        ##     timeoutSeconds: 300
        ##
        sessionAffinityConfig: {}

      ## @section Backend Persistence Parameters
      ##

      ## Enable persistence using Persistent Volume Claims
      ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
      ##
      persistence:
        ## @param backend.persistence.enabled Enable persistence using Persistent Volume Claims
        ##
        enabled: true
        ## @param backend.persistence.mountPath Path to mount the volume at.
        ##
        mountPath: /bitnami/appsmith
        ## @param backend.persistence.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
        ##
        #subPath: ""
        ## @param backend.persistence.gitDataPath The subdirectory in `/mountPath` or `/mountPath/subPath` where git connected apps will store their local git data.
        ##
        #gitDataPath: ""
        ## @param backend.persistence.storageClass Storage class of backing PVC
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        #storageClass: ""
        ## @param backend.persistence.annotations Persistent Volume Claim annotations
        ##
        #annotations: {}
        ## @param backend.persistence.accessModes Persistent Volume Access Modes
        ##
        #accessModes:
        #  - ReadWriteOnce
        ## @param backend.persistence.size Size of data volume
        ##
        #size: 8Gi
        ## @param backend.persistence.existingClaim The name of an existing PVC to use for persistence
        ##
        existingClaim: pvc-appsmith
        ## @param backend.persistence.selector Selector to match an existing Persistent Volume for WordPress data PVC
        ## If set, the PVC can't have a PV dynamically provisioned for it
        ## E.g.
        ## selector:
        ##   matchLabels:
        ##     app: my-app
        ##
        selector: {}
        ## @param backend.persistence.dataSource Custom PVC data source
        ##
        dataSource: {}

    ## @section Appsmith RTS Parameters
    ##
    ##
    rts:
      ## @param rts.replicaCount Number of Appsmith rts replicas to deploy
      ##
      replicaCount: 1

      ## @param rts.containerPorts.http Appsmith rts HTTP container port
      ##
      containerPorts:
        http: 8080
      ## Configure extra options for Appsmith rts containers' liveness and readiness probes
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
      ## @param rts.livenessProbe.enabled Enable livenessProbe on Appsmith rts containers
      ## @param rts.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
      ## @param rts.livenessProbe.periodSeconds Period seconds for livenessProbe
      ## @param rts.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
      ## @param rts.livenessProbe.failureThreshold Failure threshold for livenessProbe
      ## @param rts.livenessProbe.successThreshold Success threshold for livenessProbe
      ##
      livenessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param rts.readinessProbe.enabled Enable readinessProbe on Appsmith rts containers
      ## @param rts.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
      ## @param rts.readinessProbe.periodSeconds Period seconds for readinessProbe
      ## @param rts.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
      ## @param rts.readinessProbe.failureThreshold Failure threshold for readinessProbe
      ## @param rts.readinessProbe.successThreshold Success threshold for readinessProbe
      ##
      readinessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param rts.startupProbe.enabled Enable startupProbe on Appsmith rts containers
      ## @param rts.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
      ## @param rts.startupProbe.periodSeconds Period seconds for startupProbe
      ## @param rts.startupProbe.timeoutSeconds Timeout seconds for startupProbe
      ## @param rts.startupProbe.failureThreshold Failure threshold for startupProbe
      ## @param rts.startupProbe.successThreshold Success threshold for startupProbe
      ##
      startupProbe:
        enabled: false
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      ## @param rts.customLivenessProbe Custom livenessProbe that overrides the default one
      ##
      customLivenessProbe: {}
      ## @param rts.customReadinessProbe Custom readinessProbe that overrides the default one
      ##
      customReadinessProbe: {}
      ## @param rts.customStartupProbe Custom startupProbe that overrides the default one
      ##
      customStartupProbe: {}
      ## Appsmith rts resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ## @param rts.resources.limits The resources limits for the Appsmith rts containers
      ## @param rts.resources.requests The requested resources for the Appsmith rts containers
      ##
      resources:
        limits: {}
        requests: {}
      ## Configure Pods Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      ## @param rts.podSecurityContext.enabled Enabled Appsmith rts pods' Security Context
      ## @param rts.podSecurityContext.fsGroup Set Appsmith rts pod's Security Context fsGroup
      ##
      podSecurityContext:
        enabled: true
        fsGroup: 1001
      ## Configure Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param rts.containerSecurityContext.enabled Enabled Appsmith rts containers' Security Context
      ## @param rts.containerSecurityContext.runAsUser Set Appsmith rts containers' Security Context runAsUser
      ## @param rts.containerSecurityContext.runAsNonRoot Set Appsmith rts containers' Security Context runAsNonRoot
      ## @param rts.containerSecurityContext.readOnlyRootFilesystem Set Appsmith rts containers' Security Context runAsNonRoot
      ##
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: false

      ## @param rts.command Override default container command (useful when using custom images)
      ##
      command: []
      ## @param rts.args Override default container args (useful when using custom images)
      ##
      args: []
      ## @param rts.hostAliases Appsmith rts pods host aliases
      ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
      ##
      hostAliases: []
      ## @param rts.podLabels Extra labels for Appsmith rts pods
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      podLabels: {}
      ## @param rts.podAnnotations Annotations for Appsmith rts pods
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      podAnnotations: {}
      ## @param rts.podAffinityPreset Pod affinity preset. Ignored if `rts.affinity` is set. Allowed values: `soft` or `hard`
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
      ##
      podAffinityPreset: ""
      ## @param rts.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `rts.affinity` is set. Allowed values: `soft` or `hard`
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
      ##
      podAntiAffinityPreset: soft
      ## Node rts.affinity preset
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
      ##
      nodeAffinityPreset:
        ## @param rts.nodeAffinityPreset.type Node affinity preset type. Ignored if `rts.affinity` is set. Allowed values: `soft` or `hard`
        ##
        type: ""
        ## @param rts.nodeAffinityPreset.key Node label key to match. Ignored if `rts.affinity` is set
        ##
        key: ""
        ## @param rts.nodeAffinityPreset.values Node label values to match. Ignored if `rts.affinity` is set
        ## E.g.
        ## values:
        ##   - e2e-az1
        ##   - e2e-az2
        ##
        values: []
      ## @param rts.affinity Affinity for Appsmith rts pods assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      ## NOTE: `rts.podAffinityPreset`, `rts.podAntiAffinityPreset`, and `rts.nodeAffinityPreset` will be ignored when it's set
      ##
      affinity: {}
      ## @param rts.nodeSelector Node labels for Appsmith rts pods assignment
      ## ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
      nodeSelector: {}
      ## @param rts.tolerations Tolerations for Appsmith rts pods assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      ##
      tolerations: []
      ## @param rts.updateStrategy.type Appsmith rts statefulset strategy type
      ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
      ##
      updateStrategy:
        ## StrategyType
        ## Can be set to RollingUpdate or OnDelete
        ##
        type: RollingUpdate

      ## @param rts.priorityClassName Appsmith rts pods' priorityClassName
      ##
      priorityClassName: ""
      ## @param rts.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
      ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
      ##
      topologySpreadConstraints: []
      ## @param rts.schedulerName Name of the k8s scheduler (other than default) for Appsmith rts pods
      ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
      ##
      schedulerName: ""
      ## @param rts.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
      ##
      terminationGracePeriodSeconds: ""
      ## @param rts.lifecycleHooks for the Appsmith rts container(s) to automate configuration before or after startup
      ##
      lifecycleHooks: {}
      ## @param rts.extraEnvVars Array with extra environment variables to add to Appsmith rts nodes
      ## e.g:
      ## extraEnvVars:
      ##   - name: FOO
      ##     value: "bar"
      ##
      extraEnvVars: []
      ## @param rts.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Appsmith rts nodes
      ##
      extraEnvVarsCM: ""
      ## @param rts.extraEnvVarsSecret Name of existing Secret containing extra env vars for Appsmith rts nodes
      ##
      extraEnvVarsSecret: ""
      ## @param rts.extraVolumes Optionally specify extra list of additional volumes for the Appsmith rts pod(s)
      ##
      extraVolumes: []
      ## @param rts.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Appsmith rts container(s)
      ##
      extraVolumeMounts: []
      ## @param rts.sidecars Add additional sidecar containers to the Appsmith rts pod(s)
      ## e.g:
      ## sidecars:
      ##   - name: your-image-name
      ##     image: your-image
      ##     imagePullPolicy: Always
      ##     ports:
      ##       - name: portname
      ##         containerPort: 1234
      ##
      sidecars: []
      ## @param rts.initContainers Add additional init containers to the Appsmith rts pod(s)
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
      ## e.g:
      ## initContainers:
      ##  - name: your-image-name
      ##    image: your-image
      ##    imagePullPolicy: Always
      ##    command: ['sh', '-c', 'echo "hello world"']
      ##
      initContainers: []

      ## @section Appsmith RTS Traffic Exposure Parameters
      ##
      service:
        ## @param rts.service.type Appsmith rts service type
        ##
        type: ClusterIP
        ## @param rts.service.ports.http Appsmith rts service HTTP port
        ##
        ports:
          http: 80
        ## Node ports to expose
        ## @param rts.service.nodePorts.http Node port for HTTP
        ## NOTE: choose port between <30000-32767>
        ##
        nodePorts:
          http: ""
        ## @param rts.service.clusterIP Appsmith rts service Cluster IP
        ## e.g.:
        ## clusterIP: None
        ##
        clusterIP: ""
        ## @param rts.service.loadBalancerIP Appsmith rts service Load Balancer IP
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
        ##
        loadBalancerIP: ""
        ## @param rts.service.loadBalancerSourceRanges Appsmith rts service Load Balancer sources
        ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
        ## e.g:
        ## loadBalancerSourceRanges:
        ##   - 10.10.10.0/24
        ##
        loadBalancerSourceRanges: []
        ## @param rts.service.externalTrafficPolicy Appsmith rts service external traffic policy
        ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-rts-source-ip
        ##
        externalTrafficPolicy: Cluster
        ## @param rts.service.annotations Additional custom annotations for Appsmith rts service
        ##
        annotations: {}
        ## @param rts.service.extraPorts Extra ports to expose in Appsmith rts service (normally used with the `sidecars` value)
        ##
        extraPorts: []
        ## @param rts.service.sessionAffinity Control where rts requests go, to the same pod or round-robin
        ## Values: RTSIP or None
        ## ref: https://kubernetes.io/docs/user-guide/services/
        ##
        sessionAffinity: None
        ## @param rts.service.sessionAffinityConfig Additional settings for the sessionAffinity
        ## sessionAffinityConfig:
        ##   rtsIP:
        ##     timeoutSeconds: 300
        ##
        sessionAffinityConfig: {}

    ## @section Init Container Parameters
    ##

    ## 'volumePermissions' init container parameters
    ## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
    ##   based on the *podSecurityContext/*containerSecurityContext parameters
    ##
    volumePermissions:
      ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
      ##
      enabled: false
      ## OS Shell + Utility image
      ## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
      ## @param volumePermissions.image.registry OS Shell + Utility image registry
      ## @param volumePermissions.image.repository OS Shell + Utility image repository
      ## @param volumePermissions.image.tag OS Shell + Utility image tag (immutable tags are recommended)
      ## @param volumePermissions.image.pullPolicy OS Shell + Utility image pull policy
      ## @param volumePermissions.image.pullSecrets OS Shell + Utility image pull secrets
      ##
      image:
        registry: docker.io
        repository: bitnami/os-shell
        tag: 11-debian-11-r77
        pullPolicy: IfNotPresent
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ## e.g:
        ## pullSecrets:
        ##   - myRegistryKeySecretName
        ##
        pullSecrets: []
      ## Init container's resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ## @param volumePermissions.resources.limits The resources limits for the init container
      ## @param volumePermissions.resources.requests The requested resources for the init container
      ##
      resources:
        limits: {}
        requests: {}
      ## Init container Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
      ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
      ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
      ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
      ##
      containerSecurityContext:
        runAsUser: 0

    ## @section Other Parameters
    ##

    ## ServiceAccount configuration
    ##
    serviceAccount:
      ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
      ##
      create: true
      ## @param serviceAccount.name The name of the ServiceAccount to use.
      ## If not set and create is true, a name is generated using the common.names.fullname template
      ##
      name: ""
      ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
      ##
      annotations: {}
      ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
      ##
      automountServiceAccountToken: true

    ## @section External MongoDB parameters
    ## All of these values are only used when mongodb.enabled is set to false
    ## @param externalDatabase.hosts Database hosts
    ## @param externalDatabase.port Database port number
    ## @param externalDatabase.username Non-root username for Appsmith
    ## @param externalDatabase.password Password for the non-root username for Appsmith
    ## @param externalDatabase.database Appsmith database name
    ## @param externalDatabase.existingSecret Name of an existing secret resource containing the database credentials
    ## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the database credentials
    ##
    externalDatabase:
      hosts: ["mongodb.default.svc.cluster.local"]
      port: 27017
      username: appsmith
      database: appsmith
      password: appsmith
      existingSecret: ""
      existingSecretPasswordKey: ""

    ## @section External Redis parameters
    ## All of these values are only used when redis.enabled is set to false
    ## @param externalRedis.host Redis host
    ## @param externalRedis.port Redis port number
    ## @param externalRedis.password Password for the Redis
    ## @param externalRedis.existingSecret Name of an existing secret resource containing the Redis credentials
    ## @param externalRedis.existingSecretPasswordKey Name of an existing secret key containing the Redis credentials
    ##
    externalRedis:
      host: redis-master.default.svc.cluster.local
      port: 6379
      password: ${SECRET_POSTGRES_PASSWORD}
      existingSecret: ""
      existingSecretPasswordKey: ""

    ## @section Redis sub-chart parameters
    ##
    redis:
      ## @param redis.enabled Deploy Redis subchart
      ##
      enabled: false
      ## @param redis.architecture Set Redis architecture
      ##
      architecture: standalone
      ## @param redis.existingSecret Name of a secret containing redis credentials
      ##
      existingSecret: ""
      ## @param redis.master.service.ports.redis Redis port
      ##
      master:
        service:
          ports:
            redis: 6379

      ## @param redis.auth.enabled Enable Redis auth
      ## @param redis.auth.password Redis password
      ## @param redis.auth.existingSecret Name of a secret containing the Redis password
      ##
      auth:
        enabled: true
        password: ""
        existingSecret: ""

    ## @section MongoDB sub-chart parameters
    ##
    mongodb:
      ## @param mongodb.enabled Deploy MongoDB subchart
      ##
      enabled: false
      ## @param mongodb.architecture MongoDB architecture (Appsmith requires a Replica Set)
      ## This is a requirement for Appsmith components like RTS
      ##
      architecture: replicaset
      ## @param mongodb.replicaCount MongoDB number of replicas
      ##
      replicaCount: 2
      ## @param mongodb.auth.usernames [array] MongoDB non-root username creation
      ## @param mongodb.auth.databases [array] MongoDB database creation
      ##
      auth:
        usernames:
          - bn_appsmith
        databases:
          - bitnami_appsmith
      ## @param mongodb.containerPorts.mongodb MongoDB container port (used by the headless service)
      ##
      containerPorts:
        mongodb: 27017
      ## @param mongodb.arbiter.enabled Enable Arbiter nodes in the ReplicaSet
      ##
      arbiter:
        enabled: false
