---

logger:
  default: info
  logs:
    frigate.record: debug
    frigate.ptz.onvif: debug

mqtt:
  host: mosquitto.default.svc.cluster.local
  topic_prefix: frigate
  user: "${SECRET_MQTT_USERNAME}"
  password: "${SECRET_MQTT_PASSWORD}"

database:
  path: /data/frigate.db

birdseye:
  enabled: True
  mode: continuous

# Optional: Restream configuratio
# Uses https://github.com/AlexxIT/go2rtc (v1.2.0)
go2rtc:
  streams:
    frontyard:
      - ffmpeg:rtsp://${SECRET_CAM_USERNAME}:${SECRET_CAM_PASSWORD}@192.168.1.101:554/0
    backyard:
      - rtsp://${SECRET_BACKYARDCAM_USERNAME}:${SECRET_BACKYARDCAM_PASSWORD}@192.168.1.206:554/ch0_0.264
      - "ffmpeg:backyard#video=h264"
  webrtc:
    listen: ":8555"
    candidates:
      - ${SVC_FRIGATE_ADDR}:8555 # <--- enter frigate host IP here
      - stun:8555
ffmpeg:
  global_args: ["-hide_banner", "-loglevel", "warning"]
  hwaccel_args: ["-hwaccel", "vaapi", "-hwaccel_device", "/dev/dri/renderD128", "-hwaccel_output_format", "yuv420p"]
  output_args:
    record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -use_wallclock_as_timestamps 1 -c:v copy -ar 44100 -c:a aac
    rtmp: -c:v copy -f flv -ar 44100 -c:a aac

snapshots:
  enabled: true
  timestamp: false
  bounding_box: true
  retain:
    default: 7

record:
  enabled: true
  retain:
    days: 30
    mode: all
  events:
    retain:
      default: 2
      mode: active_objects

objects:
  track:
    - person
    - dog
    - cat
    - bird
    - bicycle
    - deer
  filters:
    person:
      min_area: 5000
      max_area: 100000
      threshold: 0.7

cameras:
  frontyard:
    ffmpeg:
      inputs:
        - path: rtsp://127.0.0.1:8554/frontyard
          input_args: preset-rtsp-restream
          roles:
            - detect
            - record
            - rtmp
        # - path: rtsp://192.168.1.101:554
        #   roles: ["detect"]
        # - path: rtsp://192.168.1.101:554
        #   roles: ["record"]
    onvif:
      host: 192.168.1.101
      port: 80
      user: ${SECRET_CAM_USERNAME}
      password: ${SECRET_CAM_PASSWORD}
    detect:
      enabled: true # <---- disable detection until you have a working camera feed
      width: 1280 # <---- update for your camera's resolution
      height: 720 # <---- update for your camera's resolution
  backyard:
    ffmpeg:
      inputs:
        - path: rtsp://127.0.0.1:8554/backyard
          input_args: preset-rtsp-restream
          roles:
            - detect
            - record
            - rtmp
        # - path: rtsp://${SECRET_BACKYARDCAM_USERNAME}:${SECRET_BACKYARDCAM_PASSWORD}@192.168.1.206:554/ch0_0.264
        #   roles: ["detect"]
        # - path: rtsp://${SECRET_BACKYARDCAM_USERNAME}:${SECRET_BACKYARDCAM_PASSWORD}@192.168.1.206:554/ch0_0.264
        #   roles: ["record"]
    # rtmp:
    #   enabled: False # <-- RTMP should be disabled if your stream is not H264
    onvif:
      host: 192.168.1.206
      port: 8888
      user: ${SECRET_BACKYARDCAM_USERNAME}
      password: ${SECRET_BACKYARDCAM_PASSWORD}
    detect:
      enabled: true # <---- disable detection until you have a working camera feed
      width: 1280 # <---- update for your camera's resolution
      height: 720 # <---- update for your camera's resolution


