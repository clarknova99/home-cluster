---

logger:
  default: info
  logs:
    frigate.record: debug
    #frigate.ptz.onvif: debug

mqtt:
  host: mosquitto.default.svc.cluster.local
  topic_prefix: frigate
  user: "${SECRET_MQTT_USERNAME}"
  password: "${SECRET_MQTT_PASSWORD}"

database:
  path: /data/frigate.db

detectors:
  coral:
    type: edgetpu
    device: usb

birdseye:
  enabled: True
  mode: continuous

timestamp_style:
  # Optional: Position of the timestamp (default: shown below)
  #           "tl" (top left), "tr" (top right), "bl" (bottom left), "br" (bottom right)
  position: "tl"
  # Optional: Format specifier conform to the Python package "datetime" (default: shown below)
  #           Additional Examples:
  #             german: "%d.%m.%Y %H:%M:%S"
  format: "%m/%d/%Y %H:%M:%S"
  # Optional: Color of font
  color:
    # All Required when color is specified (default: shown below)
    red: 255
    green: 255
    blue: 255
  # Optional: Line thickness of font (default: shown below)
  thickness: 1
  # Optional: Effect of lettering (default: shown below)
  #           None (No effect),
  #           "solid" (solid background in inverse color of font)
  #           "shadow" (shadow for font)
  effect: solid

# Optional: Restream configuratio
# Uses https://github.com/AlexxIT/go2rtc (v1.2.0)
go2rtc:
  streams:
    frontyard_hq:
      - ffmpeg:rtsp://${SECRET_CAM_USERNAME}:${SECRET_CAM_PASSWORD}@192.168.1.101:554/0
    frontyard_lq:
      - ffmpeg:rtsp://${SECRET_CAM_USERNAME}:${SECRET_CAM_PASSWORD}@192.168.1.101:554/1
    backyard_hq:
      - ffmpeg:rtsp://${SECRET_BACKYARDCAM_USERNAME}:${SECRET_BACKYARDCAM_PASSWORD}@192.168.1.206:554/ch0_0.264
    backyard_lq:
      - ffmpeg:rtsp://${SECRET_BACKYARDCAM_USERNAME}:${SECRET_BACKYARDCAM_PASSWORD}@192.168.1.206:554/ch0_1.264
      #- "ffmpeg:backyard#video=h264"
  webrtc:
    listen: ":8555"
    candidates:
      - ${SVC_FRIGATE_ADDR}:8555 # <--- enter frigate host IP here
      - stun:8555
ffmpeg:
  global_args: ["-hide_banner", "-loglevel", "warning"]
  hwaccel_args: ["-hwaccel", "vaapi", "-hwaccel_device", "/dev/dri/renderD128", "-hwaccel_output_format", "yuv420p"]
  output_args:
    record: preset-record-generic-audio-aac
  # output_args:
  #   record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -use_wallclock_as_timestamps 1 -c:v copy -ar 44100 -c:a aac
  #   rtmp: -c:v copy -f flv -ar 44100 -c:a aac

snapshots:
  enabled: true
  timestamp: false
  bounding_box: true
  retain:
    default: 7

record:
  enabled: true
  retain:
    days: 30
    mode: all
  events:
    retain:
      default: 2
      mode: active_objects

objects:
  track:
    - person
    - dog
    - cat
    - bird
    - bicycle
    - deer
  filters:
    person:
      min_area: 5000
      max_area: 100000
      threshold: 0.7

cameras:
  frontyard:
    ffmpeg:
      inputs:
        - path: rtsp://127.0.0.1:8554/frontyard_lq
          input_args: preset-rtsp-restream
          roles:
            - detect
        - path: rtsp://127.0.0.1:8554/frontyard_hq
          input_args: preset-rtsp-restream
          roles:
            - record
    detect:
      enabled: true # <---- disable detection until you have a working camera feed
      width: 1280 # <---- update for your camera's resolution
      height: 720 # <---- update for your camera's resolution
  backyard:
    ffmpeg:
      inputs:
        - path: rtsp://127.0.0.1:8554/backyard_lq
          input_args: preset-rtsp-restream
          roles:
            - detect
        - path: rtsp://127.0.0.1:8554/backyard_hq
          input_args: preset-rtsp-restream
          roles:
            - record
    onvif:
      host: 192.168.1.206
      port: 8888
      user: ${SECRET_BACKYARDCAM_USERNAME}
      password: ${SECRET_BACKYARDCAM_PASSWORD}
    detect:
      enabled: true # <---- disable detection until you have a working camera feed
      width: 1280 # <---- update for your camera's resolution
      height: 720 # <---- update for your camera's resolution


