apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jupyterhub
  namespace: dev
spec:
  interval: 15m
  chart:
    spec:
      chart: jupyterhub
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: jupyterhub
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    debug:
      enabled: true
    hub:
      db:
        pvc:
          #storageClassName: local-path
          storageClassName: network-storage
          subPath: "./jupyterhub/db"
      # db:
      #   type: postgres
      #   url: "postgresql+psycopg2://${SECRET_POSTGRES_USERNAME}:${SECRET_POSTGRES_PASSWORD}@${SECRET_POSTGRES_HOSTNAME}:5432/jupyter"
      nodeSelector:
        kubernetes.io/arch: amd64
      # config:
      #   Authenticator:
      #     admin_users:
      #       - ${SECRET_AUTHELIA_DISPLAY_NAME}
      #   GenericOAuthenticator:
      #     client_id: jupyterhub
      #     client_secret: ${SECRET_JUPYTERHUB_OAUTH_CLIENT_SECRET}
      #     oauth_callback_url: "https://jupyterhub.${SECRET_DOMAIN}/hub/oauth_callback"
      #     authorize_url: https://auth.${SECRET_DOMAIN}/api/oidc/authorization
      #     token_url: https://auth.${SECRET_DOMAIN}/api/oidc/token
      #     userdata_url: https://auth.${SECRET_DOMAIN}/api/oidc/userinfo
      #     scope:
      #       - openid
      #       - profile
      #       - email
      #     #username_key: preferred_username
      #   JupyterHub:
      #     authenticator_class: generic-oauth
    singleuser:
      extraNodeAffinity:
        required:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
                  - i386
                  - i686
                  - x86
      defaultUrl: "/lab"
      extraEnv:
        JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
      image:
        #https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html
        name: jupyter/pyspark-notebook
        tag: latest
      profileList:
        - display_name: "Minimal environment"
          description: "To avoid too much bells and whistles: Python."
        - display_name: "Pyspark environment"
          description: "Spark Env"
          kubespawner_override:
            image: jupyter/pyspark-notebook:latest
          default: true
        - display_name: "Datascience environment"
          description: "If you want the additional bells and whistles: Python, R, and Julia."
          kubespawner_override:
            image: jupyter/datascience-notebook:latest
      storage:
        type: dynamic
        capacity: 5Gi
        dynamic:
          storageClass: local-path
      # storage:
      #   type: static
      #   extraVolumes:
      #     - name: jupyterhub
      #       persistentVolumeClaim:
      #         claimName: pvc-jupyterhub
      #   extraVolumeMounts:
      #     - name: jupyterhub
      #       mountPath: /home/shared

    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hajimari.io/icon: simple-icons:jupyter
      hosts:
        - &host "jupyterhub.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
