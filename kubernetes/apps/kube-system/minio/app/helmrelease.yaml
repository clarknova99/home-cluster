---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app minio
  namespace: kube-system
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2023-12-23T07-19-11Z@sha256:47d5b01cc3020efa39aac112a7cbc919af5fb18f9ebc63bda31683590715c42b
            env:
              TZ: "${TIMEZONE}"
              MINIO_UPDATE: "off"
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}
              MINIO_BROWSER_REDIRECT_URL: "https://minio.${SECRET_DOMAIN}"
              MINIO_SERVER_URL: "https://s3.${SECRET_DOMAIN}"
              MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
              #MINIO_PROMETHEUS_URL: http://thanos-query.monitoring.svc.cluster.local:9090
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_IDENTITY_OPENID_CONFIG_URL: https://auth.${SECRET_DOMAIN}/.well-known/openid-configuration
              MINIO_IDENTITY_OPENID_CLIENT_ID: minio
              MINIO_IDENTITY_OPENID_CLIENT_SECRET: "${SECRET_MINIO_OAUTH_CLIENT_SECRET}"
              MINIO_IDENTITY_OPENID_CLAIM_NAME: groups ## enables mapping lldap group name to minio policy name
              MINIO_IDENTITY_OPENID_SCOPES: openid,profile,groups,email
              MINIO_IDENTITY_OPENID_REDIRECT_URI: https://minio.${SECRET_DOMAIN}/oauth_callback
              MINIO_IDENTITY_OPENID_CLAIM_USERINFO: "on"
            envFrom:
              - secretRef:
                  name: minio-secret
            args:
              - server
              - /data
              - --console-address
              - :9001
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
              startup:
                enabled: false
            # securityContext:
            #   runAsUser: 1000
            #   runAsGroup: 1000
            #   fsGroup: 1000
            #   fsGroupChangePolicy: OnRootMismatch
            #   supplementalGroups: [100,568,1000]
        pod:
          nodeSelector:
            kubernetes.io/arch: "amd64"
    service:
      app:
        controller: minio
        annotations:
          io.cilium/lb-ipam-ips: "192.168.2.105"
        externalTrafficPolicy: Cluster
        type: LoadBalancer
        ports:
          http:
            port: 9001
          s3:
            port: 9000
    serviceMonitor:
      app:
        serviceName: minio
        enabled: true
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
            # bearerTokenSecret:
            #   name: minio
            #   key: MINIO_PROMETHEUS_TOKEN
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: mdi:pail
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &s3Host s3.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: s3
        tls:
          - hosts:
              - *host
              - *s3Host
    persistence:
      config:
        enabled: true
        type: nfs
        server: 192.168.1.2
        path: /volume1/network-storage/s3
        globalMounts:
          - path: /data
