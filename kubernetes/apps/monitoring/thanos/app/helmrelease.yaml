---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 11.6.8
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    objstoreConfig:
      type: s3
      config:
        endpoint: minio.kube-system.svc.cluster.local:9000
        bucket: thanos
        insecure: true
    queryFrontend:
      enabled: false
    query:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      replicaLabel: ["__replica__"]
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "chart-scatter-plot-hexbin"
          external-dns.home.arpa/enabled: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/hostname: thanos.${SECRET_DOMAIN}
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-middleware-chains-default@kubernetescrd
        hosts:
          - "thanos.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "thanos.${SECRET_DOMAIN}"
            secretName: "thanos.${SECRET_DOMAIN}"
    bucketweb:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          hajimari.io/enable: "false"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-middleware-chains-default@kubernetescrd
        hostname: "thanos-bucketweb.${SECRET_DOMAIN}"
        tls: true
        extraTls:
          - hosts:
              - "thanos-bucketweb.${SECRET_DOMAIN}"
    compactor:
      enabled: true
      extraFlags: ["--compact.concurrency", "4"]
      retentionResolutionRaw: 7d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          hajimari.io/enable: "false"
        hostname: "thanos-compactor.${SECRET_DOMAIN}"
        tls: true
        extraTls:
          - hosts:
              - "thanos-compactor.${SECRET_DOMAIN}"
      persistence:
        enabled: true
        storageClass: local-path
        size: 5Gi
    storegateway:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-storegateway.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: local-path
        size: 5Gi
    ruler:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers: ["http://kube-prometheus-stack-alertmanager.monitoring:9093"]
      clusterName: home-kubernetes
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-ruler.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: local-path
        size: 5Gi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
