---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 12.1.2
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    objstoreConfig:
      type: s3
      config:
        endpoint: minio.kube-system.svc.cluster.local:9000
        bucket: thanos
        insecure: true
    query:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      replicaLabel: ["__replica__"] # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "chart-scatter-plot-hexbin"
          external-dns.home.arpa/enabled: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/hostname: thanos.${SECRET_DOMAIN}
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-middleware-chains-default@kubernetescrd
        hosts:
          - "thanos.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "thanos.${SECRET_DOMAIN}"
            secretName: "thanos.${SECRET_DOMAIN}"
    bucketweb:
      enabled: true
      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          memory: 64M

    compactor:
      enabled: true
      extraFlags:
        - "--compact.concurrency"
        - "4"
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      resources:
        requests:
          cpu: 15m
          memory: 204M
        limits:
          memory: 270M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 15Gi

    storegateway:
      enabled: true
      resources:
        requests:
          cpu: 23m
          memory: 204M
        limits:
          memory: 226M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 1Gi

    ruler:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers: ["http://kube-prometheus-stack-alertmanager.monitoring:9093"]
      clusterName: home-kubernetes
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      persistence:
        enabled: true
        storageClass: local-path
        size: 512Mi

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  valuesFrom:
    - kind: Secret
      name: thanos-secret
      valuesKey: thanos
      targetPath: objstoreConfig.config.bucket
    # - kind: Secret
    #   name: thanos-secret
    #   valuesKey: S3_BUCKET_HOST
    #   targetPath: objstoreConfig.config.endpoint
    # - kind: Secret
    #   name: thanos-secret
    #   valuesKey: S3_BUCKET_REGION
    #   targetPath: objstoreConfig.config.region
    # - kind: Secret
    #   name: thanos-secret
    #   valuesKey:"goldilocks.${SECRET_DOMAIN}"
    #   targetPath: objstoreConfig.config.access_key
    # - kind: Secret
    #   name: thanos-secret
    #   valuesKey: S3_SECRET_KEY
    #   targetPath: objstoreConfig.config.secret_key
