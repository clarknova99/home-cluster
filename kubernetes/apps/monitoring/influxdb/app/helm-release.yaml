---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: influxdb
  namespace: monitoring
spec:
  interval: 60m
  chart:
    spec:
      chart: influxdb
      version: 4.12.1
      sourceRef:
        kind: HelmRepository
        name: influxdata
        namespace: flux-system
      interval: 60m
  # Values link: https://github.com/influxdata/helm-charts/blob/master/charts/influxdb/values.yaml
  values:
    image:
      repository: influxdb
      #tag: 1.8.5-alpine
      tag: 1.8.10
  # template:
  #   spec:
  #     volumes:
  #       - name: config
  #         configMap:
  #           name: influxdb
  #           defaultMode: 420
  #     containers:
  #       - name: influxdb
  #         image: influxdb:1.8.5
  #         ports:
  #           - name: api
  #             containerPort: 8086
  #             protocol: TCP
  #           - name: rpc
  #             containerPort: 8088
  #             protocol: TCP
  #         env:
  #           - name: TZ
  #             value: America/New_York
  #         resources:
  #           limits:
  #             memory: 128Mi
  #           requests:
  #             cpu: 100m
  #             memory: 128Mi
  #         volumeMounts:
  #           - name: influxdb-data
  #             mountPath: /var/lib/influxdb
  #           - name: config
  #             mountPath: /etc/influxdb
  #   volumeClaimTemplates:
  #     - kind: PersistentVolumeClaim
  #       apiVersion: v1
  #       metadata:
  #         name: pvc-influxdb
  #       spec:
  #         accessModes:
  #           - ReadWriteOnce
  #         resources:
  #           requests:
  #             storage: 8Gi
  #         volumeMode: Filesystem

    pdb:
      create: false
    service:
      type: LoadBalancer
      annotations:
        metallb.universe.tf/loadBalancerIPs: |-
          192.168.1.66
    env:
      - name: TZ
        value: "${TIMEZONE}"
    resources:
      limits:
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 128Mi
    ## Persist data to a persistent volume
    ##
    persistence:
      enabled: true
      #useExisting: true
      existingClaim: pvc-influxdb
      name: pvc-influxdb
    # persistence:
    #   data:
    #     enabled: true
    #     existingClaim: pvc-influxdb
    #     storageClass: ""

      ## A manually managed Persistent Volume and Claim
      ## Requires persistence.enabled: true
      ## If defined, PVC must be created manually before volume will be bound
      # existingClaim:
      ## influxdb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner. (nfs-client)
      # storageClass: "-"
      # annotations:
      # accessMode: ReadWriteOnce
      # size: 8Gi
    # persistence:
    #   data:
    #     enabled: true
    #     type: nfs
    #     server: 192.168.1.2
    #     path: /volume1/network-storage/influxdb
    # volumeMounts:
    #   - mountPath: /var/lib/influxdb
    #     name: influxdb-data
    # volumes:
    #   - name: pv-influxdb
    #     persistentVolumeClaim:
    #       claimName: pvc-influxdb
    # volumeMounts:
    #   - mountPath: /var/lib/influxdb
    #     name: pv-influxdb
    # persistence:
    #   enabled: true
    #   useExisting: true
    #   name: pvc-influxdb
    # persistence:
    #   data:
    #     enabled: true
    #     existingClaim: pvc-influxdb

    # adminUser:
    #   organization: "homelab"
    #   user: "admin"
    #   retention_policy: "60d"
    #   bucket: "default"
    #   password: ${INFLUXDB_PASSWORD}
    # extraVolumes:
    #   - name: influxdb
    #     persistentVolumeClaim:
    #       claimName: pvc-influxdb

    # extraVolumeMounts:
    #   - mountPath: /var/lib/influxdb
    #     name: influxdb

    # persistence:
    #   data:
    #     enabled: true
    #     existingClaim: pvc-influxdb


    # persistence:
    #   enabled: true
    #   size: 1Gi
    #   storageClass: nfs-client
