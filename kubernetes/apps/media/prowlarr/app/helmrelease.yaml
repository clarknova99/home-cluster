---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cloudnative-pg
      namespace: database
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secret
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.11.2.4160@sha256:12c58192e978bf04695cab64abd071ba323b9967b25abf51f79ab0e57f782cb6
            env:
              TZ: ${TIMEZONE}
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__AUTHENTICATION_METHOD: External
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: *port
    persistence:
      config:
        enabled: true
        existingClaim: pvc-prowlarr


  # values:
  #   initContainers:
  #     01-init-db:
  #       image: ghcr.io/onedr0p/postgres-init:16.1
  #       imagePullPolicy: IfNotPresent
  #       envFrom: &envFrom
  #         - secretRef:
  #             name: prowlarr-secret
  #   controller:
  #     annotations:
  #       reloader.stakater.com/auto: "true"
  #   image:
  #     repository: ghcr.io/onedr0p/prowlarr-develop
  #     tag: 1.11.2.4160@sha256:12c58192e978bf04695cab64abd071ba323b9967b25abf51f79ab0e57f782cb6
  #   env:
  #     TZ: "${TIMEZONE}"
  #     PROWLARR__INSTANCE_NAME: Prowlarr
  #     PROWLARR__PORT: &port 80
  #     PROWLARR__LOG_LEVEL: info
  #     PROWLARR__AUTHENTICATION_METHOD: External
  #     PROWLARR__THEME: dark
  #   # ## sops --encrypt --in-place ./kubernetes/apps/media/prowlarr/app/prowlarr.sops.yaml
  #   # ## sops --decrypt ./kubernetes/apps/media/prowlarr/app/prowlarr.sops.yaml | kubectl apply -f -

  #   envFrom: *envFrom
  #   service:
  #     main:
  #       ports:
  #         http:
  #           port: 80
  #   probes:
  #     liveness: &probes
  #       enabled: true
  #       custom: true
  #       spec:
  #         httpGet:
  #           path: /ping
  #           port: *port
  #         initialDelaySeconds: 0
  #         periodSeconds: 10
  #         timeoutSeconds: 1
  #         failureThreshold: 3
  #     readiness: *probes
  #     startup:
  #       enabled: false
  #   persistence:
  #     data:
  #       enabled: true
  #       existingClaim: pvc-prowlarr
  #       # subPath:
  #       #   - path: config
  #       #     mountPath: /config
  #       #   - path: download
  #       #     mountPath: /download
  #   resources:
  #     requests:
  #       cpu: 10m
  #       memory: 100Mi
  #     limits:
  #       memory: 800Mi
