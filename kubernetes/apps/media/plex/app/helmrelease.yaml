---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.30.0.6486-629d58034@sha256:b3e3a2a305443f243643553161cff639f3dcc74349595884ac9c77cf6bb24068
    env:
      TZ: America/New_York
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_PLEX_ADDR}"]
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 32400
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
    # volumeClaimTemplates:
    #   - name: config
    #     mountPath: /config
    #     accessMode: ReadWriteOnce
    #     size: 100Gi
    #     storageClass: ceph-block
    #     labels:
    #       snapshot.home.arpa/enabled: "true"
    extraVolumes:
      - name: plex-video
        persistentVolumeClaim:
          claimName: pvc-plex-video
    extraVolumeMounts:
      - mountPath: /app
        name: plex-video
    persistence:
      data:
        enabled: true
        existingClaim: pvc-plex-video
      transcode:
        enabled: true
        type: emptyDir

    nodeSelector:
      node-role.kubernetes.io/worker: "true"
      # intel.feature.node.kubernetes.io/gpu: "true"
    # affinity:
    #   podAntiAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       - labelSelector:
    #           matchExpressions:
    #             - key: app.kubernetes.io/name
    #               operator: In
    #               values: ["frigate"]
    #         topologyKey: kubernetes.io/hostname
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 10000Mi
